#5.1
n = int(input(majade arv: " 5 "));

roof = " ~~~~~"
walls = " /_____\\"
windows = " | []  |"
base = "   -----"

for i in range(n):
    print(roof, end=" ")
    print(walls, end=" ")
    print(windows, end=" ")
    print(base)
#5.2
CREATE TABLE students_grades (
    student_id INT,
    class_id INT,
    grade INT
);

INSERT INTO students_grades (student_id, class_id, grade)
VALUES
(1, 1, 5),
(2, 1, 4),
(3, 1, 3),
(4, 1, 5),
(5, 1, 4),
(6, 2, 4),
(7, 2, 5),
(8, 2, 3),
(9, 2, 4),
(10, 2, 5);

SELECT * FROM students_grades;

SELECT class_id, AVG(grade) AS average_grade
FROM students_grades
GROUP BY class_id;

#5.3
CREATE TABLE grades (
    student_id INT,
    grade INT
);

INSERT INTO grades (student_id, grade)
VALUES
(1, 5),
(2, 4),
(3, 3),
(4, 5),
(5, 2),
(6, 4),
(7, 5),
(8, 3),
(9, 4),
(10, 2);

DECLARE @min_grade INT, @max_grade INT;
DECLARE @current_grade INT;
DECLARE @i INT = 1;

SELECT @min_grade = grade, @max_grade = grade
FROM students_grades
WHERE student_id = @i;

WHILE @i <= (SELECT COUNT(*) FROM grades)
BEGIN
    -- Получает текущую оценку
    SELECT @current_grade = grade
    FROM students_grades
    WHERE student_id = @i;

    -- Сравнивает и обновляет минимальную и максимальную оценки
    IF @current_grade < @min_grade
    BEGIN
        SET @min_grade = @current_grade;
    END

    IF @current_grade > @max_grade
    BEGIN
        SET @max_grade = @current_grade;
    END

    SET @i = @i + 1;
END

SELECT @min_grade AS min_grade, @max_grade AS max_grade;

#5.4
CREATE TABLE districts (
    district_id INT PRIMARY KEY,  -- Идентификатор района
    population INT,              -- Население в тысячах человек
    area INT                     -- Площадь в км²
);

INSERT INTO districts (district_id, population, area)
VALUES
(1, 200, 150),   
(2, 150, 120),  
(3, 250, 180),   
(4, 300, 140),   
(5, 180, 160),
(6, 220, 100),  
(7, 100, 110), 
(8, 300, 130),  
(9, 400, 170),  
(10, 500, 190), 
(11, 270, 140), 
(12, 160, 160); 

SELECT
    SUM(population) / SUM(area) AS average_density
FROM
    districts;

#5.5
SELECT x_value, 
-0.5 * x_value + x_value AS y_value
FROM (VALUES (1), (1.5), (2), (2.5), (3)) AS x_values(x_value);
