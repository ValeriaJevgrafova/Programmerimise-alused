#V5 3. Rühm 20 õpilast sooritas ühe sessiooni jooksul kolm eksamit. Tehke algoritm eksamivormi täitmiseks.
for õ in range(20): 
    print(f"Soritab eksamit {õ+1}. õpilane")
    for e in range(3):
        print(f"{e+1}. eksam")

#V4 2. Koostage programmi plokkskeem, et arvutada ainult negatiivsete P antud arvude summa.
vastus=0
P=int(input("Mitu korda kordamine?"))
while True:
    arv=float(input("Sisaste arv: "))
    if arv<0: vastus+=arv
    print("Summa on: ",vastus)

    #V1 4. Koostage plokkskeem kotlette praadiva roboti jaoks.
    kokku=int(input("Kokku kotlete: "))
    panni_maht=int(input("Panni maht: "))
    aeg=1
    lahendamine=kokku//panni_maht
    jaak=kokku%panni_maht
    if jaak>0: lahenemine+=1
    print(f"Praeme. Tuleb {lahenemine} lahenemist.")
    for l in range(lahenemine):
        if jaak>0 and l==lahenemine-1:
            print(f"Panni peal on {jaak} kotlet.")
        else:
            print(f"Panni peal on {panni_maht} kotlet.")
            print(f"{l+1}. lahenemine. Praeme esimene pool")
            sleep(aeg)
            print("Ümberpöörame")
            print(f"{l+1}. lahenemine. Praeme teine pool")
            sleep(aeg)
            print(f"Valmis!")
            print("Kõik kotletid on praetud")

--V1.1
import math
try:
    radius = float(input("Sisesta ringi raadius (cm): "))
    side = float(input("Sisesta ruudu külje pikkus (cm): "))
    
    if radius <= 0 or side <= 0:
        raise ValueError("Raadius ja külje pikkus peavad olema positiivsed.")

    circle_area = math.pi * radius ** 2
    square_area = side ** 2

    print(f"Ring: pindala = {circle_area:.2f} cm²")
    print(f"Ruut: pindala = {square_area:.2f} cm²")

    if circle_area > square_area:
        print("Ring on suurem")
    elif circle_area < square_area:
        print("Ruut on suurem")
    else:
        print("Pindalad on võrdsed")
except ValueError as ve:
    print(f"Viga: {ve}")
except Exception as e:
    print(f"Midagi läks valesti: {e}")

--V5.4
try:
    m = float(input("Sisesta esimese koti kaal (kg): "))
    n = float(input("Sisesta teise koti kaal (kg): "))

    if m <= 0 or n <= 0:
        raise ValueError("Kaalud peavad olema positiivsed väärtused.")

    if m > n:
        print("Esimene kott on raskem")
    elif m < n:
        print("Teine kott on raskem")
    else:
        print("Kottide kaalud on võrdsed")
except ValueError as ve:
    print(f"Viga: {ve}")
except Exception as e:
    print(f"Midagi läks valesti: {e}")
