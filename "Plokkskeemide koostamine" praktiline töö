#V5 3. Rühm 20 õpilast sooritas ühe sessiooni jooksul kolm eksamit. Tehke algoritm eksamivormi täitmiseks.
for õ in range(20): 
    print(f"Soritab eksamit {õ+1}. õpilane")
    for e in range(3):
        print(f"{e+1}. eksam")

#V4 2. Koostage programmi plokkskeem, et arvutada ainult negatiivsete P antud arvude summa.
vastus=0
P=int(input("Mitu korda kordamine?"))
while True:
    arv=float(input("Sisaste arv: "))
    if arv<0: vastus+=arv
    print("Summa on: ",vastus)

    #V1 4. Koostage plokkskeem kotlette praadiva roboti jaoks.
    kokku=int(input("Kokku kotlete: "))
    panni_maht=int(input("Panni maht: "))
    aeg=1
    lahendamine=kokku//panni_maht
    jaak=kokku%panni_maht
    if jaak>0: lahenemine+=1
    print(f"Praeme. Tuleb {lahenemine} lahenemist.")
    for l in range(lahenemine):
        if jaak>0 and l==lahenemine-1:
            print(f"Panni peal on {jaak} kotlet.")
        else:
            print(f"Panni peal on {panni_maht} kotlet.")
            print(f"{l+1}. lahenemine. Praeme esimene pool")
            sleep(aeg)
            print("Ümberpöörame")
            print(f"{l+1}. lahenemine. Praeme teine pool")
            sleep(aeg)
            print(f"Valmis!")
            print("Kõik kotletid on praetud")

--V1.1
CREATE TABLE figures (
    id INT PRIMARY KEY,
    radius DECIMAL(10, 2),  
    side DECIMAL(10, 2)     
);

INSERT INTO figures (id, radius, side)
VALUES
(1, 5, 4);

SELECT 
    id,
    radius,
    side,
    (PI() * POWER(radius, 2)) AS circle_area,
    POWER(side, 2) AS square_area,
    CASE 
        WHEN (PI() * POWER(radius, 2)) > POWER(side, 2) THEN 'Ring on suurem'
        WHEN (PI() * POWER(radius, 2)) < POWER(side, 2) THEN 'Ruut on suurem'
        ELSE 'Pindalad on võrdsed'
    END AS comparison
FROM figures;

--V5.4
CREATE TABLE bags (
    first_bag_weight DECIMAL(10, 2),  -- esimese koti kaal
    second_bag_weight DECIMAL(10, 2)  -- teise koti kaal
);

INSERT INTO bags (first_bag_weight, second_bag_weight)
VALUES (10.5, 12.3);

SELECT 
    CASE 
        WHEN first_bag_weight > second_bag_weight THEN 'Esimene kott on raskem'
        WHEN first_bag_weight < second_bag_weight THEN 'Teine kott on raskem'
        ELSE 'Kottide kaalud on võrdsed'
    END AS comparison_result
FROM bags;

m = float(input("Sisesta esimese koti kaal (kg): "))
n = float(input("Sisesta teise koti kaal (kg): "))

if m > n:
    print("Esimene kott on raskem")
elif m < n:
    print("Teine kott on raskem")
else:
    print("Kottide kaalud on võrdsed")
